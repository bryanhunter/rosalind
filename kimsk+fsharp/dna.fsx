let countDNA (A, C, G, T) dna =
    match dna with
    | 'A' -> (A + 1, C, G, T)
    | 'C' -> (A, C + 1, G, T)
    | 'G' -> (A, C, G + 1, T)
    | 'T' -> (A, C, G, T + 1)
    | _  -> (A, C, G, T)

let dataset = "CCAGCAAAATGAGTAGCATAGCGGACCGGTAAAACTGTAGGGCCTCGAACTAGATCGTAGAAACCCCTCCTTGTCTATGTTAGCCGATCAAAGTTGCCGTTTTCCGGGGGGTATTTCTGGCTGCGGGCTAAGAGAACGGCAAAGTTGAGCTGCTTTAGCTGCCTACGTCTCTGGATTAGCCATCTGGCATGGTTTTAGAGCGATTGGGAGGCCAGTCGGATTCTATGAATAGTGGGCTGCCCGGTGTCGTTTACCTCCCTGATCATACGGCTGCAGCGCGGAGTTCTACTGAAGGCTCCTTTGTAGGCAGACACGTCGTCCTCCTTGCCGAAATTAGTTCAAGTTGAAATTGCAGGGGCGCGTATACAATTACAATTTACCACAGGTTGCACCCGTGTGTTGAGTTGTAAGGACGTGGTAGTTCTTAAGGGTAGAAATCAGTCTTTCTGTGAATTTGAAATGCTTCCGAGTTTGAGTTTCCACGGTAGGTTGGAATGGTCTTCTTCATTATCTCGCGAATCAGTGCAGCCCCGTGGATTTGCTGTAAGGTAGTCCTCAATAGTGTCACATGGTCCCCGGGGTCATTACACATTCGCCTAAGGCTACCTCTAGCAACGGTGGCTTTGGCATTACATGCCTATGGCATAACCGGTCTACTAGTGAGACGGGCGATTCCTACGGTTGAAGCGAACTATCAGTAGTATATGTTACCGCTTAATCACCCATGTGGATAAACCAAGATGTTACAAGTTTCCTATAAAAGATGTGTGTGAAAACTCACGTCGGAGAGAACTCGTCGTACTATGTAATTAAGAACTGTACTT"

let A, C, G, T = List.fold countDNA (0, 0, 0, 0) <| List.ofSeq dataset
sprintf "%d %d %d %d" A C G T




    
    
