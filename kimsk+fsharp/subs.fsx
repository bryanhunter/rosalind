let rec findMotif (positions:int list) (s:string) (t:string) =        
    if s.Length < t.Length then positions
    else
        let pos = s.IndexOf(t)
        if pos > 0 then
            let last = if positions = [] then 0 else positions |> Seq.last
            findMotif (positions@[last + pos + 1]) (s.Substring(pos + 1)) t
        else
            positions

let s = "GCGCCTTGTCGCCTTGATTGGACGAGAACGCCTTGTTTGTCGCCTTGCCGCCTTGCGCCTTGGAAGCGCCTTGGCGCCTTGCGTCGCCTTGGGCGCTCGCCTTGATGACGCCTTGACGCCTTGCACCGCCTTGGGCGCCTTGCGCCTTGCGCCTTGCGCCGCCTTGAGGCGCCTTGCTCGCGCCTTGTTAACCGCCTTGCGCCTTGGGGCGCCTTGCTTTGGGCGCCTTGCGCCTTGCGCCTTGTTACCGCCTTGTCGCCTTGCGCCTTGGTCGCCTTGCGGCCCGCCTTGCGAGTAACCCGCCTTGTTGAACATCGCCTTGAGGTAGGTTCCGACATTACGCCTTGCGCCTTGTCCGCCTTGAGGTTACGCCTTGCGCCTTGTGTTATCGCGCCTTGAGCCGCCTTGCGCCTTGCAGCGCCTTGTTTGGCCGCCTTGGCGTTCGCCTTGCGCCTTGAGCGCCTTGTCCGCCTTGTCAGCGCCTTGTTCCGCCTTGAGCGCGCCTTGCGGCGTTCGCCTTGTCGCCTTGCGCCTTGAGAGGCGCCTTGCGGCCGCCTTGAGCGCCTTGGTCGCCTTGGGGCATCCGCCTTGCGCCTTGTGAGCGCCTTGTCGCCTTGGGCGCCTTGCGCCTTGGTAACGCCTTGAAACGCCTTGCGCCTTGCGCCTTGGGCCCGCCTTGGCGCCTTGTGCGCCTTGAACCGCCTTGCGCCTTGCGCCTTGCGCCTTGATTGTACGCCTTGCGCCTTGCGCCTTGAACGCCTTGGTGTACCGCCTTGCGCCTTGCGCCTTGCGCCTTGGTATCCACTATCGCCTTGCGCCTTGGCCGCCTTGATCGCCTTGACACGCGCCTTGACCCTCGCCTTGGCAGCCCCATCCGCCTTGGCGCCTTGGAATCTTA"
let t = "CGCCTTGCG"

printfn "%s" (findMotif [] s t |> List.fold (fun (acc:string) x -> acc + " " + x.ToString()) "")